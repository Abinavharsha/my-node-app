name: SSH Git Pull Per Branch

on:
  push:
    branches:
      - main
      - merge_with_me
      - use_me_to_merge

jobs:
  ssh-pull:
    runs-on: ubuntu-latest

    steps:
      - name: Set Variables Per Branch
        id: set-vars
        run: |
          BRANCH_NAME="${GITHUB_REF##*/}"
          echo "Branch: $BRANCH_NAME"

          if [[ "$BRANCH_NAME" == "main" ]]; then
            echo "hosts=20.187.146.225,192.168.1.10,72.146.152.65" >> $GITHUB_OUTPUT
            echo "users=batman,robin,githubtester2" >> $GITHUB_OUTPUT
            echo "keys=github-actions-key1,github-actions-key2,github-actions-key3" >> $GITHUB_OUTPUT
            echo "branch=main" >> $GITHUB_OUTPUT

          elif [[ "$BRANCH_NAME" == "merge_with_me" ]]; then
            echo "hosts=135.116.64.27" >> $GITHUB_OUTPUT
            echo "users=githubtester" >> $GITHUB_OUTPUT
            echo "keys=github-actions-key1" >> $GITHUB_OUTPUT
            echo "branch=merge_with_me" >> $GITHUB_OUTPUT

          elif [[ "$BRANCH_NAME" == "use_me_to_merge" ]]; then
            echo "hosts=74.176.208.144" >> $GITHUB_OUTPUT
            echo "users=thanos" >> $GITHUB_OUTPUT
            echo "keys=github-actions-key2" >> $GITHUB_OUTPUT
            echo "branch=use_me_to_merge" >> $GITHUB_OUTPUT

          else
            echo "Unsupported branch: $BRANCH_NAME"
            exit 1
          fi

      - name: Set up SSH Keys
        env:
          SSH_PRIVATE_KEY_1: ${{ secrets.SSH_PRIVATE_KEY_1 }}
          SSH_PRIVATE_KEY_2: ${{ secrets.SSH_PRIVATE_KEY_2 }}
          SSH_PRIVATE_KEY_3: ${{ secrets.SSH_PRIVATE_KEY_3 }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY_1" > ~/.ssh/github-actions-key1
          echo "$SSH_PRIVATE_KEY_2" > ~/.ssh/github-actions-key2
          echo "$SSH_PRIVATE_KEY_3" > ~/.ssh/github-actions-key3

          chmod 600 ~/.ssh/github-actions-key*

      - name: SSH and Git Pull on All Hosts
        env:
          HOSTS: ${{ steps.set-vars.outputs.hosts }}
          USERS: ${{ steps.set-vars.outputs.users }}
          KEYS: ${{ steps.set-vars.outputs.keys }}
          BRANCH: ${{ steps.set-vars.outputs.branch }}
        run: |
          IFS=',' read -ra HOST_ARRAY <<< "$HOSTS"
          IFS=',' read -ra USER_ARRAY <<< "$USERS"
          IFS=',' read -ra KEY_ARRAY <<< "$KEYS"

          for i in "${!HOST_ARRAY[@]}"; do
            HOST="${HOST_ARRAY[$i]}"
            USER="${USER_ARRAY[$i]}"
            KEY_NAME="${KEY_ARRAY[$i]}"

            echo "Connecting to $USER@$HOST using key $KEY_NAME"
            ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts

            ssh -o StrictHostKeyChecking=no -i ~/.ssh/$KEY_NAME $USER@$HOST <<EOF
              cd /home/$USER/my-node-app
              git checkout $BRANCH
              GIT_SSH_COMMAND="ssh -i ~/.ssh/$KEY_NAME" git pull origin $BRANCH
EOF
          done
